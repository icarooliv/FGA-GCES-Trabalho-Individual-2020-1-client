name: Client CI
'on':
  push: null
jobs:
  tests:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Use Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: 'node-modules-${{ hashFiles(''yarn.lock'') }}'
      - name: Install
        run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Test
        run: 'yarn test:unit'
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: '${{ secrets.CC_TEST_REPORTER_ID }}'
  build:
    name: Build
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: '${{ secrets.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: github.ref == 'refs/heads/main'
          tags: 'icarooliv/trab-individual-client:latest'
          cache-from: 'type=registry,ref=icarooliv/trab-individual-client:latest'
          cache-to: type=inline
